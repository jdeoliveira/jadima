/**
 * $theClass.getClassName() Jgm Stub (Wrapper approach)
 *
 * IMPORTANT: THIS FILE IS AUTOGENERATED BY THE JGM STUB GENERATOR.
 * DO NOT EDIT!!!
 *
 * @todo: considerar excepciones lanzadas por los metodos reales. El objeto Method lanza en
 * ese caso un InvocationTargetException. Habria que desenvolver la excepcion real, "castearla"
 * a la clase correspondiente y volver a lanzarla.
 *
 */

#if($theClass.getPackageName().equals(""))
    //Default package
#else
    package $theClass.getPackageName();
#end


public interface $className #extendsInterface($theClass)
{
        
#fields($theClass)

#foreach ($method in $theClass.getMethods())

	// ITERANDO METODO No.$velocityCount

    //Method.arguments.count= $util.getArraySize($method.getArgumentTypes())
    //retorno: $method.getReturnType().toString()
    //primitivas: $primitives.toString()
    //wrapper: 
    //contains: $primitives.contains($method.getReturnType().toString())

    #if($method.isPublic() && (!($util.isConstructor($method))))

    	//Es un metodo publico
        #methodSignature($method)
         ;
  
    #else 
        //NO ES PUBLICO o es constructor
    #end
#end
//Fin de la clase
}
//FIN DEL TEMPLATE