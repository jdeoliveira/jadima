/*
 * ClientConfig.java
 *
 * Created on 1 de mayo de 2005, 11:32 AM
 */

package ve.usb.jgm.client.config;

import javax.swing.*;
import javax.swing.event.*;
import java.util.*;
import java.io.*;
import de.hunsicker.swing.util.*;
import ve.usb.jgm.util.*;

import org.apache.log4j.*;
import ve.usb.jgm.client.XmlConfigurator;

/**
 *
 * @author  Administrator
 */
public class ClientConfig extends javax.swing.JFrame {
    
    private static Logger logger = Logger.getLogger(ClientConfig.class);
    
    private DefaultListModel repos;
    private DefaultComboBoxModel cachePolicies;
    private Repository currentRepo;
    private Cache stubsCache;
    private Cache bytecodeCache;
    private Prefetch prefetch;
    private Configuration configuration;
    
    private boolean addingRepo;
    
    /** Creates new form ClientConfig */
    public ClientConfig() {
        repos = new DefaultListModel();
        cachePolicies = new DefaultComboBoxModel();
        
        addingRepo = false;
        
        initComponents();

        cachePolicies.addElement("Last Recently Used (Default)");
        
        //Agregamos el list selection listener
        lstRepos.getSelectionModel().addListSelectionListener(
        new ListSelectionListener() {
            
            public void valueChanged(ListSelectionEvent e) {
                if (lstRepos.getSelectedIndex() != -1) {
                    Repository r = (Repository)repos.get(lstRepos.getSelectedIndex());
                    currentRepo = r;
                    txtRepoUrl.setText(r.getUrl());
                    txtRepoPriority.setText("" + r.getPriority());
                    btnRemoveRepo.setEnabled(true);
                    txtRepoUrl.setEnabled(true);
                    txtRepoPriority.setEnabled(true);
                } else {
                    btnRemoveRepo.setEnabled(false);
                    txtRepoUrl.setEnabled(false);
                    txtRepoPriority.setEnabled(false);
                }
            }
            
        }
        );
        
        loadData();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel3 = new javax.swing.JPanel();
        lblStatus = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstRepos = new javax.swing.JList();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtRepoUrl = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtRepoPriority = new javax.swing.JFormattedTextField();
        jPanel14 = new javax.swing.JPanel();
        btnAddRepo = new javax.swing.JButton();
        btnRemoveRepo = new javax.swing.JButton();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtStubsCacheSize = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbStubsCachePolicy = new javax.swing.JComboBox();
        jPanel8 = new javax.swing.JPanel();
        jTextArea3 = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtBytecodeCacheSize = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cmbBytecodeCachePolicy = new javax.swing.JComboBox();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jTextArea4 = new javax.swing.JTextArea();
        jPanel13 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtPrefetchThereshold = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        btnSaveConfig = new javax.swing.JButton();
        btnReloadConfig = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jgm Client Configuration Utility");
        setResizable(false);
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        lblStatus.setText("Ready");
        lblStatus.setAlignmentX(0.5F);
        lblStatus.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(3, 3, 3, 3)), new javax.swing.border.CompoundBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED), new javax.swing.border.EmptyBorder(new java.awt.Insets(2, 2, 2, 2)))));
        jPanel3.add(lblStatus);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        jTabbedPane1.setFont(new java.awt.Font("Dialog", 0, 10));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(100, 281));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(200, 281));
        jPanel2.setLayout(new java.awt.BorderLayout(10, 10));

        jPanel2.setFont(new java.awt.Font("Dialog", 0, 10));
        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.X_AXIS));

        jPanel5.setPreferredSize(new java.awt.Dimension(200, 216));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(3, 3, 3, 3)), new javax.swing.border.CompoundBorder(new javax.swing.border.EtchedBorder(), new javax.swing.border.EmptyBorder(new java.awt.Insets(3, 3, 3, 3)))));
        jPanel1.setAlignmentY(0.0F);
        lstRepos.setBorder(new javax.swing.border.EtchedBorder());
        lstRepos.setModel(repos);
        lstRepos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstRepos.setAlignmentY(0.0F);
        lstRepos.setMaximumSize(new java.awt.Dimension(999999, 999999));
        lstRepos.setMinimumSize(new java.awt.Dimension(200, 200));
        lstRepos.setPreferredSize(new java.awt.Dimension(200, 200));
        jScrollPane1.setViewportView(lstRepos);

        jPanel1.add(jScrollPane1);

        jPanel5.add(jPanel1);

        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.Y_AXIS));

        jPanel6.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(3, 3, 3, 3)), new javax.swing.border.CompoundBorder(new javax.swing.border.EtchedBorder(), new javax.swing.border.EmptyBorder(new java.awt.Insets(3, 3, 3, 3)))));
        jPanel6.setAlignmentY(0.0F);
        jPanel6.setMaximumSize(new java.awt.Dimension(200, 200));
        jPanel6.setMinimumSize(new java.awt.Dimension(200, 84));
        jPanel6.setPreferredSize(new java.awt.Dimension(200, 88));
        jLabel2.setFont(new java.awt.Font("Dialog", 0, 10));
        jLabel2.setText("URL:");
        jPanel6.add(jLabel2);

        txtRepoUrl.setColumns(20);
        txtRepoUrl.setAlignmentX(0.0F);
        txtRepoUrl.setEnabled(false);
        txtRepoUrl.setMaximumSize(new java.awt.Dimension(200, 20));
        txtRepoUrl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUrlActionPerformed(evt);
            }
        });
        txtRepoUrl.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRepoUrlFocusLost(evt);
            }
        });

        jPanel6.add(txtRepoUrl);

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 10));
        jLabel3.setText("Priority:");
        jPanel6.add(jLabel3);

        txtRepoPriority.setColumns(5);
        txtRepoPriority.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtRepoPriority.setAlignmentX(0.0F);
        txtRepoPriority.setEnabled(false);
        txtRepoPriority.setMaximumSize(new java.awt.Dimension(60, 20));
        txtRepoPriority.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRepoPriorityActionPerformed(evt);
            }
        });
        txtRepoPriority.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRepoPriorityFocusLost(evt);
            }
        });

        jPanel6.add(txtRepoPriority);

        jPanel14.setAlignmentX(0.0F);
        btnAddRepo.setText("New");
        btnAddRepo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRepoActionPerformed(evt);
            }
        });

        jPanel14.add(btnAddRepo);

        btnRemoveRepo.setText("Remove");
        btnRemoveRepo.setEnabled(false);
        btnRemoveRepo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveRepoActionPerformed(evt);
            }
        });

        jPanel14.add(btnRemoveRepo);

        jPanel6.add(jPanel14);

        jPanel5.add(jPanel6);

        jPanel2.add(jPanel5, java.awt.BorderLayout.CENTER);

        jTextArea1.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Dialog", 0, 10));
        jTextArea1.setLineWrap(true);
        jTextArea1.setText("The JGM Client will contact the following repositories in priority order to locate and download jar stubs (during compilation) and real bytecode (during execution)");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(3, 3, 3, 3)), new javax.swing.border.CompoundBorder(new javax.swing.border.EtchedBorder(), new javax.swing.border.EmptyBorder(new java.awt.Insets(3, 3, 3, 3)))));
        jPanel2.add(jTextArea1, java.awt.BorderLayout.NORTH);

        jTabbedPane1.addTab("Repositories", jPanel2);

        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel7.setBorder(new javax.swing.border.TitledBorder("Jar Stubs"));
        jTextArea2.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        jTextArea2.setEditable(false);
        jTextArea2.setFont(new java.awt.Font("Dialog", 0, 10));
        jTextArea2.setLineWrap(true);
        jTextArea2.setText("The JGM Client will use the following properties to cache downloaded jar stubs during compilation and execution");
        jTextArea2.setWrapStyleWord(true);
        jTextArea2.setBorder(null);
        jPanel7.add(jTextArea2, java.awt.BorderLayout.NORTH);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jPanel9.setAlignmentX(0.0F);
        jPanel9.setAlignmentY(0.0F);
        jLabel1.setText("Max. Size:");
        jLabel1.setMinimumSize(new java.awt.Dimension(70, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel9.add(jLabel1, gridBagConstraints);

        txtStubsCacheSize.setColumns(60);
        txtStubsCacheSize.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtStubsCacheSize.setAlignmentX(0.0F);
        txtStubsCacheSize.setMinimumSize(new java.awt.Dimension(100, 22));
        txtStubsCacheSize.setName("txtStubsCacheSize");
        txtStubsCacheSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStubsCacheSizeActionPerformed(evt);
            }
        });
        txtStubsCacheSize.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtStubsCacheSizeFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel9.add(txtStubsCacheSize, gridBagConstraints);

        jLabel4.setText("Kb");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel9.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Policy:");
        jLabel5.setMinimumSize(new java.awt.Dimension(70, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel9.add(jLabel5, gridBagConstraints);

        cmbStubsCachePolicy.setModel(cachePolicies);
        cmbStubsCachePolicy.setAlignmentX(0.0F);
        cmbStubsCachePolicy.setMinimumSize(new java.awt.Dimension(130, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel9.add(cmbStubsCachePolicy, gridBagConstraints);

        jPanel7.add(jPanel9, java.awt.BorderLayout.CENTER);

        jPanel4.add(jPanel7);

        jPanel8.setLayout(new java.awt.BorderLayout());

        jPanel8.setBorder(new javax.swing.border.TitledBorder("Real ByteCode"));
        jTextArea3.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        jTextArea3.setEditable(false);
        jTextArea3.setFont(new java.awt.Font("Dialog", 0, 10));
        jTextArea3.setLineWrap(true);
        jTextArea3.setText("The JGM Client will use the following properties to cache real bytecode downloaded during excecution");
        jTextArea3.setWrapStyleWord(true);
        jTextArea3.setBorder(null);
        jPanel8.add(jTextArea3, java.awt.BorderLayout.NORTH);

        jPanel10.setLayout(new java.awt.GridBagLayout());

        jPanel10.setAlignmentX(0.0F);
        jPanel10.setAlignmentY(0.0F);
        jLabel6.setText("Max. Size:");
        jLabel6.setMinimumSize(new java.awt.Dimension(70, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel10.add(jLabel6, gridBagConstraints);

        txtBytecodeCacheSize.setColumns(60);
        txtBytecodeCacheSize.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtBytecodeCacheSize.setAlignmentX(0.0F);
        txtBytecodeCacheSize.setMinimumSize(new java.awt.Dimension(100, 22));
        txtBytecodeCacheSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBytecodeCacheSizeActionPerformed(evt);
            }
        });
        txtBytecodeCacheSize.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBytecodeCacheSizeFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel10.add(txtBytecodeCacheSize, gridBagConstraints);

        jLabel7.setText("Kb");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jLabel7, gridBagConstraints);

        jLabel8.setText("Policy:");
        jLabel8.setMinimumSize(new java.awt.Dimension(70, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel10.add(jLabel8, gridBagConstraints);

        cmbBytecodeCachePolicy.setModel(cachePolicies);
        cmbBytecodeCachePolicy.setAlignmentX(0.0F);
        cmbBytecodeCachePolicy.setMinimumSize(new java.awt.Dimension(130, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel10.add(cmbBytecodeCachePolicy, gridBagConstraints);

        jPanel8.add(jPanel10, java.awt.BorderLayout.CENTER);

        jPanel4.add(jPanel8);

        jTabbedPane1.addTab("Cache", jPanel4);

        jPanel11.setLayout(new java.awt.BorderLayout());

        jPanel12.setLayout(new java.awt.BorderLayout());

        jPanel12.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(3, 3, 3, 3)), new javax.swing.border.CompoundBorder(new javax.swing.border.EtchedBorder(), new javax.swing.border.EmptyBorder(new java.awt.Insets(3, 3, 3, 3)))));
        jTextArea4.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        jTextArea4.setEditable(false);
        jTextArea4.setFont(new java.awt.Font("Dialog", 0, 10));
        jTextArea4.setLineWrap(true);
        jTextArea4.setText("The JGM Client will prefetch real bytecode from classes being loaded in the following time thereshold");
        jTextArea4.setWrapStyleWord(true);
        jTextArea4.setBorder(null);
        jPanel12.add(jTextArea4, java.awt.BorderLayout.NORTH);

        jPanel13.setLayout(new java.awt.GridBagLayout());

        jPanel13.setAlignmentX(0.0F);
        jPanel13.setAlignmentY(0.0F);
        jLabel9.setText("Prefetch Thereshold:");
        jLabel9.setMinimumSize(new java.awt.Dimension(110, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel13.add(jLabel9, gridBagConstraints);

        txtPrefetchThereshold.setColumns(60);
        txtPrefetchThereshold.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPrefetchThereshold.setAlignmentX(0.0F);
        txtPrefetchThereshold.setMinimumSize(new java.awt.Dimension(100, 22));
        txtPrefetchThereshold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrefetchTheresholdActionPerformed(evt);
            }
        });
        txtPrefetchThereshold.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPrefetchTheresholdFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel13.add(txtPrefetchThereshold, gridBagConstraints);

        jLabel10.setText("seg.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel13.add(jLabel10, gridBagConstraints);

        jPanel12.add(jPanel13, java.awt.BorderLayout.CENTER);

        jPanel11.add(jPanel12, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Prefetching", jPanel11);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jToolBar1.setFloatable(false);
        jToolBar1.setMaximumSize(new java.awt.Dimension(999999, 50));
        jToolBar1.setMinimumSize(new java.awt.Dimension(200, 50));
        jToolBar1.setPreferredSize(new java.awt.Dimension(500, 50));
        btnSaveConfig.setText("Save");
        btnSaveConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveConfigActionPerformed(evt);
            }
        });

        jToolBar1.add(btnSaveConfig);

        btnReloadConfig.setText("Reload");
        btnReloadConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadConfigActionPerformed(evt);
            }
        });

        jToolBar1.add(btnReloadConfig);

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jToolBar1.add(btnExit);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);

        pack();
    }//GEN-END:initComponents

    private void btnRemoveRepoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveRepoActionPerformed
        if (addingRepo) {
            //Cancel adding repo
            addingRepo = false;
            lstRepos.setSelectedIndex(-1);
            
            btnAddRepo.setText("New");
            btnRemoveRepo.setText("Remove");
            btnRemoveRepo.setEnabled(false);
            
            txtRepoUrl.setText("");
            txtRepoPriority.setText("");
            
            txtRepoUrl.setEnabled(false);
            txtRepoPriority.setEnabled(false);
            
        } else {
            //This means DELETE IT
            repos.removeElement(currentRepo);
            configuration.removeRepository(currentRepo);
            
            lstRepos.setSelectedIndex(-1);
            
            btnRemoveRepo.setEnabled(false);
            
            txtRepoUrl.setText("");
            txtRepoPriority.setText("");
            
            txtRepoUrl.setEnabled(false);
            txtRepoPriority.setEnabled(false);
        }
    }//GEN-LAST:event_btnRemoveRepoActionPerformed

    private void btnAddRepoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRepoActionPerformed
        if (addingRepo) {
            //This means CREATE IT
            Repository r = new Repository(txtRepoUrl.getText().trim(), (new Integer(txtRepoPriority.getText())).intValue());
            
            //add it to the configuration and to the listmodel
            configuration.addRepository(r);
            repos.addElement(r);
            
            //Done, restore button state
            lstRepos.setSelectedIndex(repos.size() - 1);
            btnAddRepo.setText("New");
            btnRemoveRepo.setText("Remove");
            
            addingRepo = false;
            
        } else {
            btnAddRepo.setText("Add");
            btnRemoveRepo.setText("Cancel");
            btnRemoveRepo.setEnabled(true);
            addingRepo = true;
            
            lstRepos.setSelectedIndex(-1);
            txtRepoUrl.setText("Type the URL here");
            txtRepoPriority.setText("");
            
            txtRepoUrl.setEnabled(true);
            txtRepoPriority.setEnabled(true);
        }
    }//GEN-LAST:event_btnAddRepoActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void txtPrefetchTheresholdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrefetchTheresholdFocusLost
        prefetch.setThereshold((new Long(txtPrefetchThereshold.getText())).longValue());
    }//GEN-LAST:event_txtPrefetchTheresholdFocusLost

    private void txtPrefetchTheresholdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrefetchTheresholdActionPerformed
        prefetch.setThereshold((new Long(txtPrefetchThereshold.getText())).longValue());
    }//GEN-LAST:event_txtPrefetchTheresholdActionPerformed

    private void txtBytecodeCacheSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBytecodeCacheSizeActionPerformed
        bytecodeCache.setSize((new Long(txtBytecodeCacheSize.getText())).longValue());
    }//GEN-LAST:event_txtBytecodeCacheSizeActionPerformed

    private void txtBytecodeCacheSizeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBytecodeCacheSizeFocusLost
         bytecodeCache.setSize((new Long(txtBytecodeCacheSize.getText())).longValue());
    }//GEN-LAST:event_txtBytecodeCacheSizeFocusLost

    private void txtStubsCacheSizeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStubsCacheSizeFocusLost
        stubsCache.setSize((new Long(txtStubsCacheSize.getText())).longValue());
    }//GEN-LAST:event_txtStubsCacheSizeFocusLost

    private void btnReloadConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadConfigActionPerformed
        //Save data
        lblStatus.setText("Reloading configuration file...");
        btnSaveConfig.setEnabled(false);
        btnReloadConfig.setEnabled(false);
        btnExit.setEnabled(false);
        
        SwingWorker worker = (new SwingWorker() {
            public Object construct() {
                //Cargamos
                loadData();
                
                //Como ya guardamos, restauramos la ventana
                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                        btnSaveConfig.setEnabled(true);
                        btnReloadConfig.setEnabled(true);
                        btnExit.setEnabled(true);
                        lblStatus.setText("Configuration file succesfully reloaded");
                    }
                });
                
                return null;
            }
        });
        worker.start();
    }//GEN-LAST:event_btnReloadConfigActionPerformed
    
    private void btnSaveConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveConfigActionPerformed
        //Save data
        lblStatus.setText("Saving configuration file...");
        btnSaveConfig.setEnabled(false);
        btnReloadConfig.setEnabled(false);
        btnExit.setEnabled(false);
        
        SwingWorker worker = (new SwingWorker() {
            public Object construct() {
                //Guardamos
                //XmlConfigurator.save(configuration, System.getProperty("user.home") + System.getProperty("file.separator") + ".jgm" + System.getProperty("file.separator") + "jgm-config.xml");
                
                //Como ya guardamos, restauramos la ventana
                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                        btnSaveConfig.setEnabled(true);
                        btnReloadConfig.setEnabled(true);
                        btnExit.setEnabled(true);
                        lblStatus.setText("Configuration file succesfully saved");
                    }
                });
                
                return null;
            }
        });
        worker.start();
    }//GEN-LAST:event_btnSaveConfigActionPerformed
    
    private void txtStubsCacheSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStubsCacheSizeActionPerformed
        stubsCache.setSize((new Long(txtStubsCacheSize.getText())).longValue());
    }//GEN-LAST:event_txtStubsCacheSizeActionPerformed
    
    private void txtRepoPriorityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRepoPriorityActionPerformed
        if (!addingRepo) {
            currentRepo.setPriority((new Integer(txtRepoPriority.getText())).intValue());
        }
    }//GEN-LAST:event_txtRepoPriorityActionPerformed
    
    private void txtRepoPriorityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRepoPriorityFocusLost
        if (!addingRepo) {
            currentRepo.setPriority((new Integer(txtRepoPriority.getText())).intValue());
        }
    }//GEN-LAST:event_txtRepoPriorityFocusLost
    
    private void txtRepoUrlFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRepoUrlFocusLost
        if (!addingRepo) {
            currentRepo.setUrl(txtRepoUrl.getText());
        }
    }//GEN-LAST:event_txtRepoUrlFocusLost
    
    private void txtUrlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUrlActionPerformed
        if (!addingRepo) {
            currentRepo.setUrl(txtRepoUrl.getText());
        }
    }//GEN-LAST:event_txtUrlActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientConfig().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRepo;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnReloadConfig;
    private javax.swing.JButton btnRemoveRepo;
    private javax.swing.JButton btnSaveConfig;
    private javax.swing.JComboBox cmbBytecodeCachePolicy;
    private javax.swing.JComboBox cmbStubsCachePolicy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JList lstRepos;
    private javax.swing.JFormattedTextField txtBytecodeCacheSize;
    private javax.swing.JFormattedTextField txtPrefetchThereshold;
    private javax.swing.JFormattedTextField txtRepoPriority;
    private javax.swing.JTextField txtRepoUrl;
    private javax.swing.JFormattedTextField txtStubsCacheSize;
    // End of variables declaration//GEN-END:variables
    
    //Load configuration data from $HOME/.jgm/jgm-config.xml
    private void loadData() {
        //try {
            repos.removeAllElements();
            
            lblStatus.setText("Loading current configuration file");
            //configuration = XmlConfigurator.load(System.getProperty("user.home") + System.getProperty("file.separator") + ".jgm" + System.getProperty("file.separator") + "jgm-config.xml");
            
            //Cargamos los datos del repositorio
            Iterator<Repository> it = configuration.getRepositories().iterator();
            while (it.hasNext()) {
                Repository r = it.next();
                repos.addElement(r);
            }
            
            lblStatus.setText("Current configuration successfully loaded");
        //} catch (InvalidConfigurationFileException e) {
            //logger.error("Error reading/parsing configuration file", e);
            lblStatus.setText("Invalid or inexistent configuration file, working on new file");
            
            //This creates a default configuration "template"
            configuration = new Configuration();
        //}
        
        //Cargamos los datos del cache
        stubsCache = configuration.getStubsCache();
        txtStubsCacheSize.setText("" + stubsCache.getSize());
        
        bytecodeCache = configuration.getBytecodeCache();
        txtBytecodeCacheSize.setText("" + bytecodeCache.getSize());
        
        prefetch = configuration.getPrefetch();
        txtPrefetchThereshold.setText("" + prefetch.getThereshold());
    }
}
